# Sample workflow for building and deploying a Hugo site to GitHub Pages
name: Deploy Hugo Site

on:
  # Runs on pushes targeting the default branch
  push:
    branches:
      - main

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

# Default to bash
defaults:
  run:
    shell: bash

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    env:
      HUGO_VERSION: 0.115.4
    name: Generate files
    steps:
      - name: 🛒 Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0
      - name: 📥 Install Hugo CLI
        run: |
          wget -O ${{ runner.temp }}/hugo.deb https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION}/hugo_extended_${HUGO_VERSION}_linux-amd64.deb \
          && sudo dpkg -i ${{ runner.temp }}/hugo.deb          
      - name: 📥 Install Dart Sass
        run: sudo snap install dart-sass
      - name: ✨ Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'
      - name: ⚙️ Setup Pages
        id: pages
        uses: actions/configure-pages@v5
      - name: 📥 Install Node.js dependencies
        run: "[[ -f package-lock.json || -f npm-shrinkwrap.json ]] && npm ci || true"
      - name: ✨ Install Academic CLI GIRTEL modified
        run: |
          mkdir ~/academic-cli
          cd ~/academic-cli
          git clone https://github.com/girtel/hugo-academic-cli-girtel.git
          cd hugo-academic-cli-girtel
          pip install -e .
      - name: 📚 Create publications
        run: |         
          academic import --bibtex publications/publications.bib
      - name: 🚀 Build with Hugo
        env:
          # For maximum backward compatibility with Hugo modules
          HUGO_ENVIRONMENT: production
          HUGO_ENV: production
        run: |
          hugo \
            --gc \
            --minify \
            --baseURL "${{ steps.pages.outputs.base_url }}/" 
#      - name: 🌏 Copy FILES
#        run: |
#          cp -r ./aditionalFiles/files ./public/files/
      - name: 📤 Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./public

  # Deployment job
  deploy-gh-pages:
    name: GH Deploy
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

          # Deployment job
  deploy-girtel-sv:
    name: Server Deploy
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Download artifact
        uses: actions/download-artifact@v4
      - name: ⚙ Process artifact
        run: |
          cd github-pages
          mkdir ../public
          tar -xvf artifact.tar -C ../public
      - name: 🔑 Install SSH Key
        run: |
          install -m 600 -D /dev/null ~/.ssh/id_rsa
          echo "${{ secrets.KEY }}" > ~/.ssh/id_rsa
          echo "${{ secrets.KNOWN_HOSTS }}" > ~/.ssh/known_hosts

      - name: 🚀 Deploy
        run: |
          rsync --archive --delete --stats -e 'ssh -p ${{ secrets.PORT }}' './public/' ${{ secrets.REMOTE_DEST }}
  
  notify:
    name: Notify
    needs: [deploy-girtel-sv, deploy-gh-pages]
    runs-on: ubuntu-latest
    steps:
      - name: 📤 Telegram Notification
        run: |
          curl -X POST \
           -H 'Content-Type: application/json' \
           -d '{"chat_id": "${{ secrets.TELEGRAM_TO }}", "text": "🌏 WILLIOT website has been updated.\nhttps://williot.girtel.es", "disable_notification": false}' \
           https://api.telegram.org/bot${{ secrets.TELEGRAM_TOKEN }}/sendMessage
